service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
      // allow read, write;
    // }
    // Function in rules
    function signedInOrPublic() {
      return request.auth.uid != null || resource.data.visibility == 'public';
    }

    match /users/{userId} {
      // allow read: if request.auth.uid == $userId;
      // allow write: if request.auth.uid == $userId;
      allow read, write: if true;
    }
    match /categories/{id} {
      allow list: if request.query.limit <= 10;
      // allow read: if true;
      allow write: if true; //TODO false
      //allow create: if true;
    }

    match /products/{productId} {
      // allow read: if true;
      allow list: if request.query.limit <= 10 && request.auth.uid != null;
      allow write: if request.auth.uid != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.published == 1;
    }


    match /products/{productId}/public {
      // allow read: if true;
      allow list: if request.query.limit <= 10;
      allow write: if request.auth.uid != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.published == 1;
    }

    // https://firebase.google.com/docs/firestore/security/rules-query
    match /stories/{storyId} {
      allow list: if request.query.limit <= 10 && resource.data.status != 1;
      allow read: if resource.data.status == 1;
      allow write: if request.auth.uid != null;
    }

    match /registrations/{email} {
      allow read: if false;
      allow write: if request.resource.data.keys().hasAll(['pwd'])
        && request.resource.data.pwd.size() > 5
        && email.matches('.+@.+[.][[:alnum:]]+')
        && email.split(' ').size() <= 1;
    }

    match /activations/{email} {
      allow read: if false;
      allow write: if request.resource.data.code == resource.data.code && resource.data.status == 1;
    }

  }
}
